Binary files old/.DS_Store and new/.DS_Store differ
diff -uN old/TKCalendarDayView.m new/TKCalendarDayView.m
--- old/TKCalendarDayView.m	2016-05-04 16:56:58.000000000 +0800
+++ new/TKCalendarDayView.m	2016-05-10 13:42:07.000000000 +0800
@@ -497,116 +497,122 @@
 	
 }
 - (void) _realignEventsAtIndex:(NSInteger)index{
-	
-	UIScrollView *sv = self.pages[index];
-	TKTimelineView *timeline = [self _timelineAtIndex:index];
-	
-
-	NSMutableArray *sameTimeEvents = [[NSMutableArray alloc] init];
-	NSInteger offsetCount = 0;
-	NSInteger repeatNumber = 0;		// number of nested appointments
-	CGFloat horizOffset = 0.0f;		// number of pixels to offset horizontally when they are nested
-	CGFloat startMarker = -100.0f;	// starting point to check if they match
-	CGFloat endMarker = -100.0f;
-	
-	
-	CGFloat topOrigin = -1;
-	
-	for (TKCalendarDayEventView *event in timeline.events) {
-		
-		
-		if(event.gestureRecognizers.count<1){
-			UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(scrollViewWasTapped:)];
-			[event addGestureRecognizer:tap];
-		}
-		
-		
-		BOOL startSameDay = [event.startDate isSameDay:timeline.date timeZone:self.calendar.timeZone];
-		
-		if(!startSameDay && (([event.startDate compare:timeline.date] == NSOrderedAscending && [event.endDate compare:timeline.date] == NSOrderedAscending) || ([event.startDate compare:timeline.date] == NSOrderedDescending))) continue;
-
-		BOOL endSameDay = [event.endDate isSameDay:timeline.date timeZone:self.calendar.timeZone];
-		NSDateComponents *startComp = [event.startDate dateComponentsWithTimeZone:self.calendar.timeZone];
-		NSDateComponents *endComp = [event.endDate dateComponentsWithTimeZone:self.calendar.timeZone];
-
-		NSInteger hourStart = startSameDay ? startComp.hour : 0;
-		CGFloat hourStartPosition = hourStart * VERTICAL_DIFF + VERTICAL_INSET;
-		
-		NSInteger minuteStart = startSameDay ? round(startComp.minute / 5.0) * 5 : 0;
-		CGFloat minuteStartPosition = roundf((CGFloat)minuteStart / 60.0f * VERTICAL_DIFF);
-		
-		NSInteger hourEnd = endSameDay ? endComp.hour : 23;
-		CGFloat hourEndPosition = hourEnd * VERTICAL_DIFF + VERTICAL_INSET;
-
-		NSInteger minuteEnd = endSameDay ? round(endComp.minute / 5.0) * 5 : 60;
-		CGFloat minuteEndPosition = roundf((CGFloat)minuteEnd / 60.0f * VERTICAL_DIFF);
-		
-		CGFloat eventHeight = hourEndPosition + minuteEndPosition - hourStartPosition - minuteStartPosition;
-		eventHeight = MAX(roundf(VERTICAL_DIFF/2), eventHeight);
-		
-		
-		
-		
-		// nobre additions - split control and offset control				
-		// split control - adjusts balloon widths so their times/titles don't overlap
-		// offset control - adjusts starting balloon position so you can see all starts/ends
-		if ((hourStartPosition + minuteStartPosition) - startMarker < 1) {
-			repeatNumber++;
-		} else {
-			repeatNumber = 0;
-			[sameTimeEvents removeAllObjects];
-			//if this event starts before the last event's end, we have to offset it!
-			if (hourStartPosition + minuteStartPosition < endMarker) {
-				horizOffset = EVENT_SAME_HOUR * ++offsetCount;
-			}
-			else {
-				horizOffset = 0.0f;
-				offsetCount = 0;
-			}
-		}
-		
-
-		
-		
-		
-		CGFloat eventWidth = (CGRectGetWidth(self.bounds)  - LEFT_INSET - RIGHT_EVENT_INSET)/(repeatNumber+1);
-		CGFloat eventOriginX = LEFT_INSET + 2.0f + horizOffset;
-		CGRect eventFrame = CGRectMake(eventOriginX + (repeatNumber*eventWidth), hourStartPosition + minuteStartPosition, eventWidth, eventHeight);
-		event.frame = CGRectIntegral(eventFrame);
-		[event setNeedsLayout];
-		[sv addSubview:event];
-		
-		for (NSInteger i = [sameTimeEvents count]-1; i >= 0; i--) {
-			TKCalendarDayEventView *sameTimeEvent = sameTimeEvents[i];
-			CGRect newFrame = sameTimeEvent.frame;
-			newFrame.size.width = eventWidth;
-			newFrame.origin.x = eventOriginX + (i*(eventWidth));
-			sameTimeEvent.frame = CGRectIntegral(newFrame);
-			[sameTimeEvent setNeedsLayout];
-		}
-		[sameTimeEvents addObject:event];
-		
-		[event setNeedsLayout];
-		
-		
-		startMarker = hourStartPosition + minuteStartPosition;
-		endMarker = MAX(endMarker,hourEndPosition + minuteEndPosition);
-		
-		if(topOrigin<0)
-			topOrigin = startMarker;
-		
-		topOrigin = MIN(topOrigin,startMarker);
-		
-	}
-	
-	if(topOrigin>0)
-		timeline.startY = topOrigin;
-	if(sv == self.nowLineView.superview)
-		[sv bringSubviewToFront:self.nowLineView];
-	
+    
+    UIScrollView *sv = self.pages[index];
+    TKTimelineView *timeline = [self _timelineAtIndex:index];
+    
+    
+    NSMutableArray *sameTimeEvents = [[NSMutableArray alloc] init];
+    NSInteger offsetCount = 0;
+    NSInteger repeatNumber = 0;		// number of nested appointments
+    CGFloat horizOffset = 0.0f;		// number of pixels to offset horizontally when they are nested
+    CGFloat startMarker = -100.0f;	// starting point to check if they match
+    CGFloat endMarker = -100.0f;
+    
+    
+    CGFloat topOrigin = -1;
+    
+#pragma 为了事件条宽度设个变量
+    int event_i = 0;
+    for (TKCalendarDayEventView *event in timeline.events) {
+        
+        
+        if(event.gestureRecognizers.count<1){
+            UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(scrollViewWasTapped:)];
+            [event addGestureRecognizer:tap];
+        }
+        
+        
+        BOOL startSameDay = [event.startDate isSameDay:timeline.date timeZone:self.calendar.timeZone];
+        
+        if(!startSameDay && (([event.startDate compare:timeline.date] == NSOrderedAscending && [event.endDate compare:timeline.date] == NSOrderedAscending) || ([event.startDate compare:timeline.date] == NSOrderedDescending))) continue;
+        
+        BOOL endSameDay = [event.endDate isSameDay:timeline.date timeZone:self.calendar.timeZone];
+        NSDateComponents *startComp = [event.startDate dateComponentsWithTimeZone:self.calendar.timeZone];
+        NSDateComponents *endComp = [event.endDate dateComponentsWithTimeZone:self.calendar.timeZone];
+        
+        NSInteger hourStart = startSameDay ? startComp.hour : 0;
+        CGFloat hourStartPosition = hourStart * VERTICAL_DIFF + VERTICAL_INSET;
+        
+        NSInteger minuteStart = startSameDay ? round(startComp.minute / 5.0) * 5 : 0;
+        CGFloat minuteStartPosition = roundf((CGFloat)minuteStart / 60.0f * VERTICAL_DIFF);
+        
+        NSInteger hourEnd = endSameDay ? endComp.hour : 23;
+        CGFloat hourEndPosition = hourEnd * VERTICAL_DIFF + VERTICAL_INSET;
+        
+        NSInteger minuteEnd = endSameDay ? round(endComp.minute / 5.0) * 5 : 60;
+        CGFloat minuteEndPosition = roundf((CGFloat)minuteEnd / 60.0f * VERTICAL_DIFF);
+        
+        CGFloat eventHeight = hourEndPosition + minuteEndPosition - hourStartPosition - minuteStartPosition;
+        eventHeight = MAX(roundf(VERTICAL_DIFF/2), eventHeight);
+        
+        
+        
+        
+        // nobre additions - split control and offset control
+        // split control - adjusts balloon widths so their times/titles don't overlap
+        // offset control - adjusts starting balloon position so you can see all starts/ends
+        if ((hourStartPosition + minuteStartPosition) - startMarker < 1) {
+            repeatNumber++;
+        } else {
+            repeatNumber = 0;
+            [sameTimeEvents removeAllObjects];
+            //if this event starts before the last event's end, we have to offset it!
+            if (hourStartPosition + minuteStartPosition < endMarker) {
+                horizOffset = EVENT_SAME_HOUR * ++offsetCount;
+            }
+            else {
+                horizOffset = 0.0f;
+                offsetCount = 0;
+            }
+        }
+        
+        
+        
+#pragma 事件条宽度
+        CGFloat eventWidth = ([UIScreen mainScreen].bounds.size.width / 3 * 2 - 50) / timeline.events.count;
+        CGFloat eventOriginX = LEFT_INSET + eventWidth * event_i;
+        event_i++;
+        //        CGFloat eventWidth = (CGRectGetWidth(self.bounds)  - LEFT_INSET - RIGHT_EVENT_INSET)/(repeatNumber+1);
+        //		CGFloat eventOriginX = LEFT_INSET + 2.0f + horizOffset;
+        //		CGRect eventFrame = CGRectMake(eventOriginX + (repeatNumber*eventWidth), hourStartPosition + minuteStartPosition, eventWidth, eventHeight);
+        CGRect eventFrame = CGRectMake(eventOriginX, hourStartPosition + minuteStartPosition, eventWidth, eventHeight);
+        event.frame = CGRectIntegral(eventFrame);
+        [event setNeedsLayout];
+        [sv addSubview:event];
+        
+        //		for (NSInteger i = [sameTimeEvents count]-1; i >= 0; i--) {
+        //			TKCalendarDayEventView *sameTimeEvent = sameTimeEvents[i];
+        //			CGRect newFrame = sameTimeEvent.frame;
+        //			newFrame.size.width = eventWidth;
+        //			newFrame.origin.x = eventOriginX + (i*(eventWidth));
+        //			sameTimeEvent.frame = CGRectIntegral(newFrame);
+        //			[sameTimeEvent setNeedsLayout];
+        //		}
+        //		[sameTimeEvents addObject:event];
+        //
+        //		[event setNeedsLayout];
+        
+        
+        startMarker = hourStartPosition + minuteStartPosition;
+        endMarker = MAX(endMarker,hourEndPosition + minuteEndPosition);
+        
+        if(topOrigin<0)
+            topOrigin = startMarker;
+        
+        topOrigin = MIN(topOrigin,startMarker);
+        
+    }
+    
+    if(topOrigin>0)
+        timeline.startY = topOrigin;
+    if(sv == self.nowLineView.superview)
+        [sv bringSubviewToFront:self.nowLineView];
+    
 }
 
 
+
 #pragma mark WeekDay
 - (void) _advanceWeekToIndex:(NSInteger)index animated:(BOOL)animated{
 	self.userInteractionEnabled = NO;
